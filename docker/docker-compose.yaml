services:
# Open WebUI
  open-webui:
    build:
      context: ${CONTEXT:-.}
      dockerfile: docker/Dockerfile
      platforms:
        - ${BUILD_PLATFORM:-linux/amd64}
      args:
        USE_CUDA: ${USE_CUDA:-false}
        USE_CUDA_VER: ${USE_CUDA_VER:-cu121}
        USE_OLLAMA: ${USE_OLLAMA:-false}
        USE_EMBEDDING_MODEL: ${USE_EMBEDDING_MODEL:-sentence-transformers/all-MiniLM-L6-v2}
        USE_RERANKING_MODEL: ${USE_RERANKING_MODEL:-}
        USE_WHISPER_MODEL: ${USE_WHISPER_MODEL:-base}
        USE_TIKTOKEN_ENCODING_NAME: ${USE_TIKTOKEN_ENCODING_NAME:-cl100k_base}
    image: ${DOCKER_REPOSITORY:-open-webui/open-webui}:${IMAGE_TAG:-latest}
    container_name: ${OPEN_WEBUI_CONTAINER_NAME:-open-webui}
    volumes:
      - ${OPEN_WEBUI_DATA_DIR:-open-webui/data}:/app/backend/data:rw
    ports:
      - "${OPEN_WEBUI_PORT-3000}:8080"
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://postgres:passwd@postgres:5432/postgres}
      TZ: ${TZ:-UTC}
      WEBUI_NAME: ${WEBUI_NAME:-Open WebUI}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - webui-network

# Postgres
  postgres:
    image: postgres:17-alpine
    container_name: ${POSTGRES_CONTAINER_NAME:-postgres}
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-passwd}
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      TZ: ${TZ:-UTC}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - ${POSTGRES_DATA_DIR:-postgres/data}:/var/lib/postgresql/data:rw
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 1s
      timeout: 3s
      retries: 30
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    shm_size: 256m
    networks:
      - webui-network

# Qdrant
  qdrant:
    image: qdrant/qdrant:latest
    container_name: ${QDRANT_CONTAINER_NAME:-qdrant}
    volumes:
      - ${QDRANT_DATA_DIR:-qdrant/data}:/qdrant/storage:rw
    ports:
      - "${QDRANT_PORT:-6333}:6333"
      - "${QDRANT_GRPC_PORT:-6334}:6334"
    restart: unless-stopped
    environment:
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY:-}
      TZ: ${TZ:-UTC}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - webui-network

# Networks
networks:
  webui-network:
    driver: bridge